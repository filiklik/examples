<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">
    <flow name="GetFlights">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" doc:name="HTTP" allowedMethods="GET"/>
        <set-variable variableName="airline" value="#[message.inboundProperties.'http.query.params'.airline]" doc:name="Set Airline Variable"/>
        <flow-ref name="setCodeSubflow" doc:name="setCodeSubflow"/>
        <choice doc:name="Choice">
            <when expression="flowVars.airline == &quot;delta&quot;">
                <flow-ref name="GetdeltaFlights" doc:name="GetDeltaFlights"/>
            </when>
            <when expression="flowVars.airline == &quot;united&quot;">
                <flow-ref name="getUnitedFlights" doc:name="getUnitedFlights"/>
            </when>
            <when expression="flowVars.airline == &quot;american&quot;">
                <flow-ref name="GetAmericanFlights" doc:name="GetAmericanFlights"/>
            </when>
            <otherwise>
                <flow-ref name="GetAllFlights" doc:name="GetAllFlights"/>
            </otherwise>
        </choice>
        <validation:is-not-empty value="#[payload]" message="Payload is empty" doc:name="Validation"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload orderBy $.price]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>

    </flow>
    <sub-flow name="setCodeSubflow">
        <set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code == empty ? 'SFO' : message.inboundProperties.'http.query.params'.code]" doc:name="Set airport code variable"/>
    </sub-flow>
    <flow name="getUnitedFlights">
        <flow-ref name="setCodeSubflow" doc:name="setCodeSubflow"/>
        <http:request config-ref="United_Res_Request" path="/essentials/united/flights/{destination}" method="GET" doc:name="United REST Request">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message metadata:id="ecf9ee77-0fb5-4deb-9e9a-2d5fa3751e1b" doc:name="Transform Message">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.flights map ((flight , indexOfFlight) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="GetAmericanFlights">
        <http:request config-ref="American_flights_request" path="/flights" method="GET" doc:name="American REST Request">
            <http:request-builder>
                <http:query-param paramName="code" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message metadata:id="0d01e8ba-f460-46d1-a3fe-6e2f6838317b" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane.type,
	price: payload01.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="GetdeltaFlights">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Web_Service_Consumer" operation="findFlight" doc:name="Delta SOAP Request"/>
        <dw:transform-message metadata:id="518b58c6-80e1-4585-8c1b-0ac70d7a4bdf" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
      
    </flow>
    <flow name="GetAllFlights">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="GetdeltaFlights" doc:name="GetDeltaFlow"/>
                <filter ref="Not_List" doc:name="Filter Reference"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getUnitedFlights" doc:name="UnitedFlow"/>
                <filter ref="Not_List" doc:name="Filter Reference"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="GetAmericanFlights" doc:name="American Flow"/>
                <filter ref="Not_List" doc:name="Filter Reference"/>
            </processor-chain>
        </scatter-gather>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flatten payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="postflightsflow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP"/>
        <dw:transform-message metadata:id="63ca8554-2b3a-4ff9-88c2-a4afaa565cb0" doc:name="Transform Message">
            <dw:input-payload doc:sample="flight-example.json"/>
            <dw:set-payload resource="classpath:json_flights_playground.dwl"/>
            <dw:set-variable variableName="xml"><![CDATA[%dw 1.0
%output application/xml
---
data: {
	hub : "MUA",
	flights @(airline:payload.airline): {
	code: payload.toAirportCode,
	airline: payload.airline
	
	}
}]]></dw:set-variable>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="postMultipleFlightsflow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/multipleFlights" allowedMethods="POST" doc:name="HTTP"/>
        <dw:transform-message metadata:id="e8aa3888-457a-4994-830c-d43d5b3eec2b" doc:name="Transform Message">
            <dw:input-payload doc:sample="flights-example.xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://soap.training.mulesoft.com/
%type currency = :string {format: "###.00"}
%type flights = :object {class: "com.mulesoft.training.Flight"}
---
flights : payload.ns0#listAllFlightsResponse.*return map {
		destination : $.destination,
		price: $.price as :number as :currency ,
		planeType: upper $.planeType replace /(BOING)/ with  "BOEING",
		departureDate: $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM, dd, yyyy"},
		availableSeats:$.emptySeats as :number,
		//totalSeats: getNumSeats($.planeType)
		totalSeats : lookup("getTotalSeatsflow",{type: $.planeType})
}]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getTotalSeatsflow">
        <expression-component doc:name="Expression"><![CDATA[if(payload.type.contains('737')) {
	payload = 150;
	}
	else {
	payload = 300;
}]]></expression-component>
    </flow>
</mule>
